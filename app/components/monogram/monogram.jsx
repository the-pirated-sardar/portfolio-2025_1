import { forwardRef, useId } from 'react';
import { classes } from '~/utils/style';
import styles from './monogram.module.css';
// import ComputerLogo from "../assets/computer-logo.svg";

export const Monogram = forwardRef(({ highlight, className, ...props }, ref) => {
  const id = useId();
  const clipId = `${id}monogram-clip`;


// const Monogram = forwardRef(({ className, highlight, ...props }, ref) => {
//   const clipId = `clip-${Math.random().toString(36).substr(2, 9)}`;

// useEffect(() => {
//   // Fetch the SVG file dynamically
//   fetch("/assets/computer-logo.svg")
//     .then((response) => response.text())
//     .then((data) => setSvgContent(data));
// }, []);

  return (
    // <svg
    //   aria-hidden
    //   className={classes(styles.monogram, className)}
    //   width="48"
    //   height="29"
    //   viewBox="0 0 48 29"
    //   ref={ref}
    //   {...props}
    // >
    //   <defs>
    //     <clipPath id={clipId}>
    //       <path d="M0 0h6.5a6 6 0 0 1 5.2 3.1L19.4 17l4-9L19 0h6.5a6 6 0 0 1 5.2 3.1L39.5 19 35 29 24.5 10 16 29 0 0Zm46.7 2.8A2 2 0 0 0 45 0h-7l5.5 10 3.2-7.2Z" />
    //     </clipPath>
    //   </defs>
    //   <rect clipPath={`url(#${clipId})`} width="100%" height="100%" />
    //   {highlight && (
    //     <g clipPath={`url(#${clipId})`}>
    //       <rect className={styles.highlight} width="100%" height="100%" />
    //     </g>
    //   )}
    // </svg>

    <svg
    aria-hidden
    className={classes(styles.monogram, className)}
    width="40"
    height="40"
    viewBox="0 0 140 140"
    ref={ref}
    {...props}
  >
    <defs>
        <clipPath id={clipId}>
        <path d="M96.583 0.583992V37.32C96.583 38.6853 96.8817 39.6667 97.479 40.264C98.1617 40.8613 99.6123 41.16 101.831 41.16H111.303V53.32H95.047C90.183 53.32 86.2577 52.808 83.271 51.784C80.3697 50.76 78.1937 48.968 76.743 46.408C75.3777 43.7627 74.4817 40.9467 74.055 37.96C73.7137 34.9733 73.543 30.9627 73.543 25.928C73.543 20.808 73.7137 16.9253 74.055 14.28C74.4817 11.6347 75.3777 9.16 76.743 6.856C78.1937 4.55199 80.3697 2.93066 83.271 1.992C86.2577 1.05333 90.183 0.583992 95.047 0.583992H96.583ZM116.423 41.16H117.959C121.628 41.16 124.444 41.2453 126.407 41.416C128.455 41.5013 130.418 41.8853 132.295 42.568C134.172 43.1653 135.452 43.8907 136.135 44.744C136.903 45.5973 137.586 47.0907 138.183 49.224C138.866 51.272 139.25 53.4907 139.335 55.88C139.42 58.2693 139.463 61.6827 139.463 66.12C139.463 70.5573 139.42 74.0987 139.335 76.744C139.25 79.304 138.866 81.7787 138.183 84.168C137.586 86.472 136.903 88.0933 136.135 89.032C135.452 89.9707 134.172 90.824 132.295 91.592C130.418 92.2747 128.455 92.7013 126.407 92.872C124.444 92.9573 121.628 93 117.959 93H116.423V41.16ZM75.335 64.456H91.463C92.6577 64.456 93.383 64.6267 93.639 64.968C93.895 65.3093 94.023 66.0347 94.023 67.144V77.128C94.023 78.4933 94.1937 79.4747 94.535 80.072C94.9617 80.584 95.943 80.84 97.479 80.84H111.303V93H92.487C86.2577 93 81.5217 91.9333 78.279 89.8C75.1217 87.6667 73.543 83.9547 73.543 78.664V67.144C73.543 65.352 74.1403 64.456 75.335 64.456ZM101.703 0.455994H117.959C124.188 0.455994 128.882 1.52266 132.039 3.656C135.282 5.78933 136.903 9.50133 136.903 14.792V26.312C136.903 28.104 136.306 29 135.111 29H118.983C117.788 29 117.063 28.8293 116.807 28.488C116.551 28.1467 116.423 27.4213 116.423 26.312V16.328C116.423 14.9627 116.21 14.024 115.783 13.512C115.442 12.9147 114.503 12.616 112.967 12.616H101.703V0.455994Z" fill="white"/>
        <path d="M20.568 93H7.128C4.22666 93 2.30666 92.5307 1.368 91.592C0.514664 90.6533 0.0879974 88.6907 0.0879974 85.704V5.576C0.0879974 4.04 0.514664 2.80266 1.368 1.864C2.22133 0.925329 3.33066 0.455994 4.696 0.455994H20.568V93ZM25.688 0.455994H41.944C50.0507 0.455994 55.4267 2.37599 58.072 6.216C60.8027 9.97066 62.168 17.5653 62.168 29C62.168 36.5947 61.3147 42.5253 59.608 46.792C57.9867 51.0587 55.8107 53.9173 53.08 55.368C50.3493 56.7333 46.6373 57.416 41.944 57.416H25.688V45.256H35.16C37.3787 45.256 38.7867 44.9573 39.384 44.36C40.0667 43.7627 40.408 42.824 40.408 41.544V16.456C40.408 15.0907 40.0667 14.1093 39.384 13.512C38.7867 12.9147 37.3787 12.616 35.16 12.616H25.688V0.455994Z" fill="white"/>
        </clipPath>
    </defs>
    <rect clipPath={`url(#${clipId})`} width="100%" height="100%" />
    {highlight && (
      <g clipPath={`url(#${clipId})`}>
        <rect className={styles.highlight} width="100%" height="100%" />
      </g>
    )}
  </svg>
  );
});

export default Monogram;